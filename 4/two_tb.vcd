$date
	Thu Sep 22 08:46:17 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module two_tb $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module ex $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 ( b0 $end
$var wire 1 ) b1 $end
$var wire 1 * b2 $end
$var wire 1 + b3 $end
$var wire 1 % cin $end
$var wire 4 , sum [3:0] $end
$var wire 1 " cout $end
$var wire 1 - c3 $end
$var wire 1 . c2 $end
$var wire 1 / c1 $end
$scope module fa0 $end
$var wire 1 % ci $end
$var wire 1 / co $end
$var wire 1 0 s $end
$var wire 1 1 x $end
$var wire 1 ( y $end
$upscope $end
$scope module fa1 $end
$var wire 1 / ci $end
$var wire 1 . co $end
$var wire 1 2 s $end
$var wire 1 3 x $end
$var wire 1 ) y $end
$upscope $end
$scope module fa2 $end
$var wire 1 . ci $end
$var wire 1 - co $end
$var wire 1 4 s $end
$var wire 1 5 x $end
$var wire 1 * y $end
$upscope $end
$scope module fa3 $end
$var wire 1 - ci $end
$var wire 1 " co $end
$var wire 1 6 s $end
$var wire 1 7 x $end
$var wire 1 + y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
07
06
05
04
03
02
11
10
0/
0.
0-
b1 ,
0+
0*
0)
0(
b0 '
b1 &
0%
b0 $
b1 #
0"
b1 !
$end
#20
14
1/
1.
00
b110 !
b110 ,
12
1(
1)
13
b11 $
b11 '
b11 #
b11 &
#40
0.
0"
0/
10
14
0-
12
b1111 !
b1111 ,
16
0(
1*
03
17
b110 $
b110 '
b1001 #
b1001 &
#60
1"
06
1-
02
1.
04
1/
07
1(
1)
1*
1+
b1 !
b1 ,
10
b0 $
b0 '
b1 #
b1 &
1%
#80
00
b0 !
b0 ,
02
0(
0)
13
b11 $
b11 '
b11 #
b11 &
#100
10
b11 !
b11 ,
12
1(
1)
b0 $
b0 '
#120
